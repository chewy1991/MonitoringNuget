//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonitoringNuget.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestatEntities : DbContext
    {
        public TestatEntities()
            : base("name=TestatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Abrechnung> Abrechnung { get; set; }
        public virtual DbSet<Abrechnungsposition> Abrechnungsposition { get; set; }
        public virtual DbSet<Adresse> Adresse { get; set; }
        public virtual DbSet<Device> Device { get; set; }
        public virtual DbSet<DeviceCategory> DeviceCategory { get; set; }
        public virtual DbSet<Kontaktperson> Kontaktperson { get; set; }
        public virtual DbSet<Kunde> Kunde { get; set; }
        public virtual DbSet<Locations> Locations { get; set; }
        public virtual DbSet<Logmessage> Logmessage { get; set; }
        public virtual DbSet<Networkinterface> Networkinterface { get; set; }
        public virtual DbSet<Point_Of_Delivery> Point_Of_Delivery { get; set; }
        public virtual DbSet<Ports> Ports { get; set; }
        public virtual DbSet<Referenzen> Referenzen { get; set; }
        public virtual DbSet<Severity> Severity { get; set; }
        public virtual DbSet<v_logentries> v_logentries { get; set; }
        public virtual DbSet<v_UsagePerLocation> v_UsagePerLocation { get; set; }
        public virtual DbSet<v_UsagePerPod> v_UsagePerPod { get; set; }
    
        public virtual ObjectResult<LoadHierarch_Result> LoadHierarch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadHierarch_Result>("LoadHierarch");
        }
    
        public virtual int LogClear(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogClear", idParameter);
        }
    
        public virtual int LogMessageAdd(string logmessage, string podName, Nullable<int> severity, string hostname)
        {
            var logmessageParameter = logmessage != null ?
                new ObjectParameter("logmessage", logmessage) :
                new ObjectParameter("logmessage", typeof(string));
    
            var podNameParameter = podName != null ?
                new ObjectParameter("PodName", podName) :
                new ObjectParameter("PodName", typeof(string));
    
            var severityParameter = severity.HasValue ?
                new ObjectParameter("Severity", severity) :
                new ObjectParameter("Severity", typeof(int));
    
            var hostnameParameter = hostname != null ?
                new ObjectParameter("hostname", hostname) :
                new ObjectParameter("hostname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogMessageAdd", logmessageParameter, podNameParameter, severityParameter, hostnameParameter);
        }
    
        public virtual int PodBill(Nullable<int> podId)
        {
            var podIdParameter = podId.HasValue ?
                new ObjectParameter("PodId", podId) :
                new ObjectParameter("PodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PodBill", podIdParameter);
        }
    
        public virtual int PodBillEvent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PodBillEvent");
        }
    }
}
